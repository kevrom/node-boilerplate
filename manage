#!/usr/bin/env node

/*
	Command-line utility to interact with the User model.
*/

'use strict';

var program = require('commander');
var path    = require('path');
var crypto  = require('crypto');
var glob    = require('glob');
var Mocha   = require('mocha');
var pkg     = require('./package.json');
var chalk   = require('chalk');
var exec    = require('child_process').exec;

program
	.version(pkg.version);

program
	.command('sync')
	.description('sync database')
	.action(function() {
		console.log(chalk.blue('Syncing database...'));
		var app = require('./app');
		require('./core/database')(app);
		app
			.sequelize
			.sync()
			.complete(function(err) {
				if (err) {
					return console.log(chalk.red('Database sync failed with ' + err));
				}
				console.log(chalk.blue('Database synced with no errors.'));
			});
	});

program
	.command('secret')
	.description('generate a secret')
	.action(function() {
		console.log(chalk.blue('Generating a secret...'));
		var secret = crypto.randomBytes(20).toString('hex');
		console.log(chalk.blue('Please copy and paste this secret into your settings.json file.'));
		console.log(chalk.white(secret));
	});


program
	.command('test')
	.description('run all tests')
	.action(function() {
		console.log(chalk.blue('Running all tests...'));
		var app = require('./app');
		require('./core/database')(app);
		app.config.loadFile('./settings.test.json');
		app.sequelize.sync();

		var mocha = new Mocha();

		var tests = glob.sync('server/**/test/*.js');
		//console.log(tests);
		tests.forEach(function(test) {
			var testFile = path.join(app.root, test);
			mocha.addFile(testFile);
		});

		mocha.run(function(failures) {
			process.on('exit', function() {
				process.exit(failures);
			});
		});

	});


program.parse(process.argv);

